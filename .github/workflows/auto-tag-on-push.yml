name: Auto Tag on Push to Main

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || github.token }}

      - name: Generate timestamp version
        id: version
        run: |
          VERSION=$(date -u +%Y%m%d.%H%M%S)
          TAG_NAME="v${VERSION}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"
          echo "Tag name: $TAG_NAME"

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.version.outputs.TAG_NAME }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag already exists, skipping creation"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag does not exist, will create"
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git tag -a "${{ steps.version.outputs.TAG_NAME }}" -m "Auto-generated release ${{ steps.version.outputs.VERSION }}"
          git push origin "${{ steps.version.outputs.TAG_NAME }}"
          
          echo "✅ Created and pushed tag: ${{ steps.version.outputs.TAG_NAME }}"

      - name: Summary
        run: |
          if [ "${{ steps.check_tag.outputs.exists }}" == "true" ]; then
            echo "### ⏭️ Tag Already Exists" >> $GITHUB_STEP_SUMMARY
            echo "Tag \`${{ steps.version.outputs.TAG_NAME }}\` already exists, skipped creation." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ Tag Created Successfully" >> $GITHUB_STEP_SUMMARY
            echo "Created tag: \`${{ steps.version.outputs.TAG_NAME }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "This will trigger the RPM build workflow which will:" >> $GITHUB_STEP_SUMMARY
            echo "- Build the RPM package" >> $GITHUB_STEP_SUMMARY
            echo "- Publish to GitHub Pages" >> $GITHUB_STEP_SUMMARY
            echo "- Update the RPM repository" >> $GITHUB_STEP_SUMMARY
          fi

